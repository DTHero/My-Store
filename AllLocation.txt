package com.example.internntthien.accountfacebook;

import android.content.Context;
import android.content.Intent;
import android.location.LocationManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

import com.facebook.AccessToken;
import com.facebook.FacebookSdk;
import com.facebook.LoggingBehavior;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class AllLocation extends AppCompatActivity implements OnMapReadyCallback{

    private GoogleMap mark;
    protected LocationManager locationManager;
    Button share, invite;
    private DatabaseReference database;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        FacebookSdk.sdkInitialize(getApplicationContext()); //Requires to use facebook properties in an app

        FacebookSdk.setIsDebugEnabled(true);
        FacebookSdk.addLoggingBehavior(LoggingBehavior.INCLUDE_ACCESS_TOKENS);

        setContentView(R.layout.activity_all_location);

        share = (Button) findViewById(R.id.share);
        invite = (Button) findViewById(R.id.invite);

        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);

        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
                .findFragmentById(R.id.map);
        mapFragment.getMapAsync(this);
        database = FirebaseDatabase.getInstance().getReference("Coordinates");

        invite.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(AllLocation.this, Invite.class);
                startActivity(intent);
            }
        });

    }
    @Override
    public void onMapReady(GoogleMap googleMap) {
        mark = googleMap;
        final Intent getToken = getIntent();
        database.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                for (DataSnapshot snapshot: dataSnapshot.getChildren()) {
                    Coordinates coordinate = snapshot.getValue(Coordinates.class);
                    LatLng cur_loc = new LatLng(coordinate.getLatitude(),
                            coordinate.getLongitude());
//        mark.setMyLocationEnabled(true);
                    if (getToken.getStringExtra(MarkLocation.TOKEN).equals(coordinate.getUserID()))
                        mark.addMarker(new MarkerOptions().position(cur_loc)
                                .title("Your location!"));
                    else
                        mark.addMarker(new MarkerOptions().position(cur_loc)
                                .title(coordinate.getUserID() + "'s location"));
                        mark.moveCamera(CameraUpdateFactory.newLatLng(cur_loc));
                }
            }
            @Override
            public void onCancelled(DatabaseError error) {
                // Failed to read value
                Toast.makeText(AllLocation.this, "Failed to read value.",
                        Toast.LENGTH_SHORT).show();
            }
        });
        mark.animateCamera(CameraUpdateFactory.zoomTo(15.5f));
    }


}
